"""
Unit tests for add_landmarks_final.py

They test the important functions that 
    1. Check if gaze is on the face
    2. Check if gaze is on any facial feature and get its distances
    3. Check the closest facemesh point closest to the feature

Run the tests with something that allows mathplotlib plots to be displayed 
"""

from add_landmarks_final import *

FACIAL_FEATURE_NAMES = {
    0: "NONE",
    1: "LEFT EYE",
    2: "RIGHT EYE",
    3: "NOSE",
    4: "MOUTH"
}

def VisualizeFeatures(gaze_point, feature_list, face_points, special_points, plot_buffers=False):
    """
    feature list = result of CreatePolygons
    """
    plt.figure(figsize=(10.88,10.8))
    if gaze_point != None:
        plt.plot(gaze_point.x, gaze_point.y, 'bo')
    x, y = zip(*face_points)
    plt.plot(x, y, 'go',markersize=1)
    for feature_poly in feature_list:
        xx, yy = feature_poly.exterior.coords.xy
        plt.plot(xx, yy)
        plt.fill(xx, yy, alpha=0.3)
    for s_point in special_points:
        # print("SPECIAL")
        plt.plot(s_point[0], s_point[1],'ro' ,markersize=10)

    if plot_buffers:
        face_hull = feature_list[0]
        face_bounding_box = face_hull.minimum_rotated_rectangle
        box_xx, box_yy = face_bounding_box.exterior.coords.xy

        box_points = list(zip(box_xx, box_yy))
        box_width = math.dist(box_points[1],box_points[2])
        box_height = math.dist(box_points[0],box_points[1])
        diameter = max(box_width, box_height)
        # 20 %
        xx, yy = face_hull.buffer(0.2 * diameter).exterior.coords.xy
        plt.plot(xx, yy)
        plt.fill(xx, yy, alpha=0.1)
        # 30%
        xx, yy = face_hull.buffer(0.3 * diameter).exterior.coords.xy
        plt.plot(xx, yy)
        plt.fill(xx, yy, alpha=0.1)

    plt.axis('equal')
    plt.show()

def VisualizeFeaturesWithIndex(gaze_point, feature_list, face_points, special_points):
   
   plt.figure(figsize=(40,40))
   if gaze_point != None:
      plt.plot(gaze_point.x, gaze_point.y, 'bo', markersize=20)
   x, y = zip(*face_points)
   plt.plot(x, y, 'go',markersize=5)
   for i in range(len(face_points)):
       plt.text(x[i], y[i], str(i))
   for feature_poly in feature_list:
      xx, yy = feature_poly.exterior.coords.xy
      plt.plot(xx, yy)
      plt.fill(xx, yy, alpha=0.3)
   for s_point in special_points:
       plt.plot(s_point[0], s_point[1],'ro' ,markersize=10)
   plt.axis('equal')
   plt.savefig("facial_features.png")
   plt.show()

def TestGetClosestPoint(gaze_xy=None, face_points=None, feature_list=None):
    face_points = [[[534, 164], [541, 144], [537, 151], [538, 126], [542, 138], [542, 131], [542, 116], [499, 109], [543, 102], [544, 94], [547, 64], [533, 165], [533, 167], [533, 168], [533, 168], [533, 170], [533, 172], [532, 174], [531, 183], [540, 147], [534, 147], [475, 82], [514, 116], [508, 116], [503, 114], [496, 110], [519, 115], [509, 98], [515, 99], [503, 98], [499, 99], [490, 113], [510, 192], [497, 107], [470, 109], [484, 107], [510, 138], [528, 162], [528, 166], [522, 163], [518, 164], [523, 166], [519, 166], [508, 172], [537, 143], [537, 138], [492, 91], [522, 126], [523, 141], [522, 138], [491, 135], [538, 131], [508, 86], [499, 87], [484, 72], [532, 96], [520, 103], [504, 167], [464, 168], [526, 145], [530, 147], [512, 167], [513, 167], [496, 83], [521, 144], [518, 88], [519, 83], [514, 60], [491, 78], [518, 73], [488, 88], [482, 87], [528, 164], [523, 164], [518, 165], [527, 146], [512, 167], [515, 168], [514, 167], [530, 143], [519, 167], [523, 167], [528, 167], [525, 182], [527, 173], [528, 171], [528, 169], [528, 167], [520, 167], [519, 167], [518, 168], [518, 170], [513, 158], [461, 138], [538, 149], [516, 167], [516, 167], [531, 150], [522, 147], [531, 149], [516, 128], [506, 130], [520, 141], [497, 64], [503, 73], [506, 81], [512, 176], [532, 87], [531, 75], [530, 61], [498, 112], [484, 115], [522, 114], [492, 101], [527, 123], [527, 139], [477, 120], [487, 120], [494, 123], [505, 124], [514, 123], [520, 121], [536, 116], [476, 133], [488, 99], [537, 147], [523, 131], [464, 109], [525, 119], [519, 142], [494, 106], [527, 136], [461, 153], [522, 112], [532, 133], [482, 180], [479, 188], [466, 135], [474, 172], [476, 97], [507, 197], [537, 149], [517, 135], [479, 107], [504, 111], [509, 112], [514, 169], [475, 145], [516, 205], [498, 199], [489, 195], [546, 78], [526, 207], [514, 113], [518, 112], [521, 112], [483, 97], [518, 109], [513, 108], [509, 107], [504, 107], [501, 107], [469, 94], [501, 110], [537, 155], [519, 155], [526, 144], [530, 154], [541, 109], [491, 187], [499, 192], [517, 201], [471, 180], [521, 111], [532, 124], [528, 202], [507, 203], [466, 149], [524, 167], [523, 168], [523, 169], [522, 172], [518, 179], [516, 167], [515, 166], [514, 166], [507, 162], [484, 148], [532, 119], [528, 107], [524, 108], [516, 167], [480, 163], [534, 107], [513, 186], [542, 126], [537, 121], [542, 121], [528, 132], [529, 197], [530, 190], [522, 189], [501, 175], [513, 146], [507, 181], [500, 143], [507, 150], [492, 152], [519, 195], [523, 135], [495, 180], [502, 186], [498, 168], [474, 156], [488, 169], [468, 161], [501, 157], [528, 127], [528, 142], [524, 143], [532, 138], [525, 101], [517, 95], [509, 93], [502, 93], [496, 96], [490, 107], [468, 122], [493, 115], [499, 118], [506, 119], [514, 119], [520, 118], [524, 117], [462, 124], [524, 145], [533, 128], [533, 142], [534, 146], [532, 144], [524, 147], [536, 146], [535, 148], [524, 112], [528, 114], [530, 115], [499, 107], [495, 102], [546, 128], [571, 126], [542, 149], [587, 106], [557, 126], [561, 128], [566, 128], [572, 128], [554, 123], [567, 111], [562, 111], [572, 113], [574, 116], [574, 131], [544, 196], [573, 126], [584, 132], [579, 127], [559, 147], [539, 164], [537, 168], [543, 167], [545, 170], [541, 170], [543, 171], [550, 179], [545, 145], [546, 139], [582, 110], [551, 132], [552, 146], [552, 144], [572, 150], [546, 133], [574, 100], [579, 104], [587, 94], [553, 101], [557, 112], [554, 175], [566, 185], [547, 149], [543, 150], [548, 175], [547, 174], [582, 101], [550, 149], [566, 99], [568, 94], [573, 74], [584, 98], [570, 84], [584, 108], [586, 109], [538, 166], [542, 169], [544, 171], [546, 150], [547, 175], [545, 174], [546, 174], [547, 147], [542, 172], [540, 170], [536, 169], [536, 184], [537, 175], [537, 173], [537, 171], [537, 169], [542, 172], [543, 173], [544, 174], [544, 176], [552, 165], [574, 159], [544, 173], [545, 174], [542, 152], [548, 152], [543, 151], [556, 136], [563, 141], [552, 147], [582, 83], [579, 90], [577, 96], [546, 181], [557, 93], [559, 81], [562, 68], [570, 129], [578, 134], [552, 121], [578, 119], [549, 127], [551, 144], [582, 141], [575, 138], [570, 138], [561, 136], [556, 132], [551, 128], [545, 118], [580, 152], [581, 118], [542, 148], [551, 136], [581, 133], [549, 124], [551, 147], [575, 125], [551, 140], [570, 172], [552, 120], [549, 136], [561, 192], [557, 200], [579, 156], [567, 188], [585, 119], [544, 202], [540, 149], [554, 141], [582, 128], [566, 126], [562, 125], [546, 175], [577, 164], [534, 207], [546, 205], [551, 203], [558, 123], [555, 121], [553, 120], [583, 117], [556, 120], [559, 122], [563, 123], [567, 124], [569, 125], [585, 118], [569, 126], [549, 160], [548, 148], [542, 156], [555, 196], [549, 199], [537, 203], [562, 194], [553, 120], [548, 127], [541, 206], [576, 169], [540, 170], [540, 172], [541, 173], [541, 176], [542, 183], [545, 173], [546, 173], [547, 173], [554, 170], [573, 164], [547, 122], [550, 113], [552, 115], [544, 173], [569, 178], [547, 111], [543, 190], [546, 123], [549, 136], [537, 191], [553, 183], [554, 153], [548, 187], [565, 155], [558, 160], [567, 166], [537, 198], [551, 140], [556, 189], [550, 193], [558, 178], [573, 173], [563, 181], [572, 179], [560, 168], [549, 132], [549, 146], [550, 148], [549, 141], [555, 108], [564, 106], [570, 107], [575, 109], [578, 113], [577, 126], [582, 144], [572, 132], [567, 133], [562, 131], [556, 129], [552, 125], [550, 123], [577, 146], [549, 149], [548, 131], [547, 145], [543, 148], [546, 146], [547, 151], [543, 148], [541, 149], [551, 119], [548, 119], [547, 119], [571, 125], [576, 120], [512, 111], [516, 111], [512, 106], [507, 110], [511, 115], [562, 122], [567, 124], [563, 118], [557, 121], [561, 127]]]
    face_points = list(map(lambda p_xy: (p_xy[0], -p_xy[1]), face_points[0]))
    polygons = CreatePolygons(face_points)

    # Not on face   
    gaze_xy = Point(460, -200)
    # print(polygons[0])
    point_index, point, distance = GetClosestPoint(gaze_xy, face_points)
    VisualizeFeatures(gaze_xy, polygons, face_points, [point])
    print(point_index, point, distance)
    
    # On left eye
    gaze_xy = Point(500, -100)
    point_index, point, distance = GetClosestPoint(gaze_xy, face_points)
    VisualizeFeatures(gaze_xy, polygons, face_points, [point])
    print(point_index, point, distance)
    
    # On right eye
    gaze_xy = Point(560, -100)
    point_index, point, distance = GetClosestPoint(gaze_xy, face_points)
    VisualizeFeatures(gaze_xy, polygons, face_points, [point])
    print(point_index, point, distance)
    
    # On nose
    gaze_xy = Point(540, -140)
    point_index, point, distance = GetClosestPoint(gaze_xy, face_points)
    VisualizeFeatures(gaze_xy, polygons, face_points, [point])
    print(point_index, point, distance)
    
    # On mouth 
    gaze_xy = Point(520, -160)
    point_index, point, distance = GetClosestPoint(gaze_xy, face_points)
    VisualizeFeatures(gaze_xy, polygons, face_points, [point])
    print(point_index, point, distance)
#     # On face
#     point_index, point, distance = GetClosestPoint(gaze_xy, face_points, True, )
    print("FINISHED TEST GET CLOSEST POINT")

def TestGetClosestFeature():
    face_points = [[[534, 164], [541, 144], [537, 151], [538, 126], [542, 138], [542, 131], [542, 116], [499, 109], [543, 102], [544, 94], [547, 64], [533, 165], [533, 167], [533, 168], [533, 168], [533, 170], [533, 172], [532, 174], [531, 183], [540, 147], [534, 147], [475, 82], [514, 116], [508, 116], [503, 114], [496, 110], [519, 115], [509, 98], [515, 99], [503, 98], [499, 99], [490, 113], [510, 192], [497, 107], [470, 109], [484, 107], [510, 138], [528, 162], [528, 166], [522, 163], [518, 164], [523, 166], [519, 166], [508, 172], [537, 143], [537, 138], [492, 91], [522, 126], [523, 141], [522, 138], [491, 135], [538, 131], [508, 86], [499, 87], [484, 72], [532, 96], [520, 103], [504, 167], [464, 168], [526, 145], [530, 147], [512, 167], [513, 167], [496, 83], [521, 144], [518, 88], [519, 83], [514, 60], [491, 78], [518, 73], [488, 88], [482, 87], [528, 164], [523, 164], [518, 165], [527, 146], [512, 167], [515, 168], [514, 167], [530, 143], [519, 167], [523, 167], [528, 167], [525, 182], [527, 173], [528, 171], [528, 169], [528, 167], [520, 167], [519, 167], [518, 168], [518, 170], [513, 158], [461, 138], [538, 149], [516, 167], [516, 167], [531, 150], [522, 147], [531, 149], [516, 128], [506, 130], [520, 141], [497, 64], [503, 73], [506, 81], [512, 176], [532, 87], [531, 75], [530, 61], [498, 112], [484, 115], [522, 114], [492, 101], [527, 123], [527, 139], [477, 120], [487, 120], [494, 123], [505, 124], [514, 123], [520, 121], [536, 116], [476, 133], [488, 99], [537, 147], [523, 131], [464, 109], [525, 119], [519, 142], [494, 106], [527, 136], [461, 153], [522, 112], [532, 133], [482, 180], [479, 188], [466, 135], [474, 172], [476, 97], [507, 197], [537, 149], [517, 135], [479, 107], [504, 111], [509, 112], [514, 169], [475, 145], [516, 205], [498, 199], [489, 195], [546, 78], [526, 207], [514, 113], [518, 112], [521, 112], [483, 97], [518, 109], [513, 108], [509, 107], [504, 107], [501, 107], [469, 94], [501, 110], [537, 155], [519, 155], [526, 144], [530, 154], [541, 109], [491, 187], [499, 192], [517, 201], [471, 180], [521, 111], [532, 124], [528, 202], [507, 203], [466, 149], [524, 167], [523, 168], [523, 169], [522, 172], [518, 179], [516, 167], [515, 166], [514, 166], [507, 162], [484, 148], [532, 119], [528, 107], [524, 108], [516, 167], [480, 163], [534, 107], [513, 186], [542, 126], [537, 121], [542, 121], [528, 132], [529, 197], [530, 190], [522, 189], [501, 175], [513, 146], [507, 181], [500, 143], [507, 150], [492, 152], [519, 195], [523, 135], [495, 180], [502, 186], [498, 168], [474, 156], [488, 169], [468, 161], [501, 157], [528, 127], [528, 142], [524, 143], [532, 138], [525, 101], [517, 95], [509, 93], [502, 93], [496, 96], [490, 107], [468, 122], [493, 115], [499, 118], [506, 119], [514, 119], [520, 118], [524, 117], [462, 124], [524, 145], [533, 128], [533, 142], [534, 146], [532, 144], [524, 147], [536, 146], [535, 148], [524, 112], [528, 114], [530, 115], [499, 107], [495, 102], [546, 128], [571, 126], [542, 149], [587, 106], [557, 126], [561, 128], [566, 128], [572, 128], [554, 123], [567, 111], [562, 111], [572, 113], [574, 116], [574, 131], [544, 196], [573, 126], [584, 132], [579, 127], [559, 147], [539, 164], [537, 168], [543, 167], [545, 170], [541, 170], [543, 171], [550, 179], [545, 145], [546, 139], [582, 110], [551, 132], [552, 146], [552, 144], [572, 150], [546, 133], [574, 100], [579, 104], [587, 94], [553, 101], [557, 112], [554, 175], [566, 185], [547, 149], [543, 150], [548, 175], [547, 174], [582, 101], [550, 149], [566, 99], [568, 94], [573, 74], [584, 98], [570, 84], [584, 108], [586, 109], [538, 166], [542, 169], [544, 171], [546, 150], [547, 175], [545, 174], [546, 174], [547, 147], [542, 172], [540, 170], [536, 169], [536, 184], [537, 175], [537, 173], [537, 171], [537, 169], [542, 172], [543, 173], [544, 174], [544, 176], [552, 165], [574, 159], [544, 173], [545, 174], [542, 152], [548, 152], [543, 151], [556, 136], [563, 141], [552, 147], [582, 83], [579, 90], [577, 96], [546, 181], [557, 93], [559, 81], [562, 68], [570, 129], [578, 134], [552, 121], [578, 119], [549, 127], [551, 144], [582, 141], [575, 138], [570, 138], [561, 136], [556, 132], [551, 128], [545, 118], [580, 152], [581, 118], [542, 148], [551, 136], [581, 133], [549, 124], [551, 147], [575, 125], [551, 140], [570, 172], [552, 120], [549, 136], [561, 192], [557, 200], [579, 156], [567, 188], [585, 119], [544, 202], [540, 149], [554, 141], [582, 128], [566, 126], [562, 125], [546, 175], [577, 164], [534, 207], [546, 205], [551, 203], [558, 123], [555, 121], [553, 120], [583, 117], [556, 120], [559, 122], [563, 123], [567, 124], [569, 125], [585, 118], [569, 126], [549, 160], [548, 148], [542, 156], [555, 196], [549, 199], [537, 203], [562, 194], [553, 120], [548, 127], [541, 206], [576, 169], [540, 170], [540, 172], [541, 173], [541, 176], [542, 183], [545, 173], [546, 173], [547, 173], [554, 170], [573, 164], [547, 122], [550, 113], [552, 115], [544, 173], [569, 178], [547, 111], [543, 190], [546, 123], [549, 136], [537, 191], [553, 183], [554, 153], [548, 187], [565, 155], [558, 160], [567, 166], [537, 198], [551, 140], [556, 189], [550, 193], [558, 178], [573, 173], [563, 181], [572, 179], [560, 168], [549, 132], [549, 146], [550, 148], [549, 141], [555, 108], [564, 106], [570, 107], [575, 109], [578, 113], [577, 126], [582, 144], [572, 132], [567, 133], [562, 131], [556, 129], [552, 125], [550, 123], [577, 146], [549, 149], [548, 131], [547, 145], [543, 148], [546, 146], [547, 151], [543, 148], [541, 149], [551, 119], [548, 119], [547, 119], [571, 125], [576, 120], [512, 111], [516, 111], [512, 106], [507, 110], [511, 115], [562, 122], [567, 124], [563, 118], [557, 121], [561, 127]]]
    face_points = list(map(lambda p_xy: (p_xy[0], -p_xy[1]), face_points[0]))
    # We use our perspective eg. Right Eye is right from our perspective, person's left    
    polygons = CreatePolygons(face_points)

    gaze_left_eye = Point(500,-100)
    res = GetClosestFeature(gaze_left_eye, 0, polygons[1:])
    VisualizeFeatures(gaze_left_eye, polygons, face_points,[])
    print(f'On feature: {FACIAL_FEATURE_NAMES[res[0]]}, closest feature: {FACIAL_FEATURE_NAMES[res[1]]}, distances: {res[2:]}')
    assert(res[0] == 1 and
           res[1] == 1 and
           res[2] == 0 and
           res[3] > 0 and
           res[4] > 0 and 
           res[5] > 0)
    
    gaze_right_eye = Point(560,-100)
    res = GetClosestFeature(gaze_right_eye, 0, polygons[1:])
    VisualizeFeatures(gaze_right_eye, polygons, face_points,[])
    print(f'On feature: {FACIAL_FEATURE_NAMES[res[0]]}, closest feature: {FACIAL_FEATURE_NAMES[res[1]]}, distances: {res[2:]}')
    # print(res)
    assert(res[0] == 2 and
           res[1] == 2 and
           res[2] > 0 and
           res[3] == 0 and
           res[4] > 0 and 
           res[5] > 0)
    
    gaze_nose = Point(538, -149)
    res = GetClosestFeature(gaze_nose, 0, polygons[1:])
    VisualizeFeatures(gaze_nose, polygons, face_points,[])
    print(f'On feature: {FACIAL_FEATURE_NAMES[res[0]]}, closest feature: {FACIAL_FEATURE_NAMES[res[1]]}, distances: {res[2:]}')
    assert(res[0] == 3 and
           res[1] == 3 and
           res[2] > 0 and
           res[3] > 0 and
           res[4] == 0 and 
           res[5] > 0)
    
    gaze_mouth = Point(530, -170)
    res = GetClosestFeature(gaze_mouth, 0, polygons[1:])
    VisualizeFeatures(gaze_mouth, polygons, face_points,[])
    print(f'On feature: {FACIAL_FEATURE_NAMES[res[0]]}, closest feature: {FACIAL_FEATURE_NAMES[res[1]]}, distances: {res[2:]}')
    assert(res[0] == 4 and
           res[1] == 4 and
           res[2] > 0 and
           res[3] > 0 and
           res[4] > 0 and 
           res[5] == 0)
    
    gaze_far = Point(460, -120)
    res = GetClosestFeature(gaze_far, 0, polygons[1:])
    VisualizeFeatures(gaze_far, polygons, face_points,[])
    print(f'On feature: {FACIAL_FEATURE_NAMES[res[0]]}, closest feature: {FACIAL_FEATURE_NAMES[res[1]]}, distances: {res[2:]}')
    assert(res[0] == 0 and
           res[1] == 1 and
           res[2] > 0 and
           res[3] > 0 and
           res[4] > 0 and 
           res[5] > 0)
    
    """
    NOW WITH OVERLAPPING FEATURES
    """
    face_points = [[(478.96000000000004, 342.91999999999996), (474.75, 333.66999999999996), (479.06, 337.21000000000004), (476.75, 323.95), (474.61, 330.6), (476.14, 326.87), (481.25, 317.48), (473.76, 312.6), (483.18, 309.19), (483.21000000000004, 304.97), (486.13, 290.02), (479.1, 344.11), (479.58000000000004, 345.24), (480.27, 346.02), (480.44, 348.24), (479.99, 349.86), (479.75, 351.81), (480.05, 353.7), (481.02, 354.73), (475.97, 335.49), (476.28, 335.26), (477.62, 302.26), (478.14, 316.51), (476.25, 316.5), (474.63, 315.97), (473.55, 313.37), (479.64, 315.9), (476.87, 307.64), (478.81, 308.53), (475.13, 307.55), (474.09000000000003, 308.33000000000004), (472.3, 315.07), (477.2, 357.58000000000004), (473.65, 311.52), (477.37, 314.86), (472.27, 312.28999999999996), (474.72, 330.08000000000004), (477.26, 342.09000000000003), (478.38, 344.96000000000004), (476.25, 342.68), (476.07, 343.85), (477.74, 345.03999999999996), (477.51, 345.40999999999997), (476.47, 348.78), (473.69, 333.34000000000003), (473.40999999999997, 330.41999999999996), (472.58000000000004, 304.83000000000004), (478.48, 323.03), (474.35, 332.22), (474.96000000000004, 330.58000000000004), (472.03999999999996, 328.82), (474.93, 326.93), (475.28999999999996, 303.03999999999996), (473.48, 303.25), (476.51, 297.11), (481.55, 308.03999999999996), (480.35, 310.03), (475.51, 345.96000000000004), (481.61, 342.68), (475.63, 334.25), (476.77, 335.49), (477.07, 346.33000000000004), (477.63, 346.37), (473.55, 300.87), (475.16999999999996, 333.61), (477.87, 304.47), (478.02, 301.74), (478.32, 290.88), (474.66999999999996, 299.69), (477.15, 296.35), (472.65999999999997, 303.15999999999997), (475.33000000000004, 303.9), (477.62, 343.68), (476.85, 343.99), (476.65999999999997, 344.65), (476.28, 334.91999999999996), (477.33000000000004, 346.37), (477.25, 347.15), (477.89, 346.34000000000003), (474.52, 333.28999999999996), (478.36, 345.84000000000003), (478.63, 345.69), (479.22, 345.76), (479.15999999999997, 354.07), (478.07, 352.68), (478.03, 350.88), (478.58000000000004, 349.1), (479.32, 347.81), (478.47, 347.03), (477.78999999999996, 347.52), (477.14, 348.2), (476.74, 349.01), (474.93, 340.96000000000004), (482.43, 327.95), (477.46000000000004, 336.36), (478.28, 346.7), (477.72, 346.90999999999997), (477.4, 336.81), (476.32, 335.58000000000004), (477.07, 336.19), (477.26, 324.46000000000004), (474.76, 326.03999999999996), (475.4, 331.9), (476.72, 293.23), (475.33000000000004, 297.04), (475.43, 300.3), (477.05, 350.66999999999996), (481.64, 303.9), (480.03, 296.81), (481.28, 289.94), (473.71000000000004, 314.9), (470.81, 316.78), (480.59000000000003, 315.19), (473.08000000000004, 308.94), (479.15, 321.35), (473.75, 331.15999999999997), (473.81, 320.59000000000003), (470.15, 319.47), (470.96000000000004, 321.40999999999997), (473.94, 321.71000000000004), (476.56, 320.88), (478.41999999999996, 319.82), (479.99, 317.85), (472.6, 326.87), (472.55, 308.2), (475.25, 335.21000000000004), (477.49, 326.06), (481.65999999999997, 314.69), (479.78, 318.61), (476.28999999999996, 332.1), (473.48, 311.26), (474.7, 329.24), (482.2, 335.1), (481.0, 314.13), (474.59000000000003, 327.73), (476.58000000000004, 350.15999999999997), (479.33000000000004, 353.44), (476.57, 327.41999999999996), (476.57, 345.91999999999996), (476.48, 309.03999999999996), (477.53, 360.31), (476.88, 336.11), (476.65, 328.05), (471.96000000000004, 312.5), (474.89, 314.28), (476.45, 314.83000000000004), (476.88, 347.49), (473.11, 332.91999999999996), (479.82, 365.06), (478.78999999999996, 360.22), (478.99, 357.46000000000004), (484.24, 297.49), (482.77, 366.86), (478.18, 314.82), (479.71000000000004, 314.44), (480.58000000000004, 314.22), (472.55, 307.28999999999996), (479.98, 312.44), (478.59000000000003, 311.65), (476.93, 311.1), (475.34000000000003, 310.90999999999997), (474.40999999999997, 311.13), (479.37, 307.83000000000004), (474.11, 313.46000000000004), (479.28, 339.37), (475.61, 339.55), (475.05, 333.72), (477.28999999999996, 339.18), (482.94, 313.37), (476.96000000000004, 354.12), (477.49, 357.19), (478.4, 363.02), (480.46000000000004, 348.86), (480.66999999999996, 313.40999999999997), (477.87, 322.48), (481.43, 364.69), (478.81, 362.8), (476.78999999999996, 333.96000000000004), (478.73, 347.4), (477.98, 348.31), (477.32, 349.53), (477.03999999999996, 351.03), (477.90999999999997, 352.5), (477.53999999999996, 345.87), (476.88, 345.5), (476.36, 345.01), (474.83000000000004, 343.19), (472.40999999999997, 334.95), (479.62, 319.41999999999996), (482.03, 312.40999999999997), (481.38, 312.4), (478.19, 346.05), (474.24, 341.96000000000004), (482.43, 312.98), (477.84000000000003, 355.0), (477.93, 323.78), (478.26, 321.14), (479.53999999999996, 320.82), (476.39, 326.84000000000003), (480.89, 361.63), (481.05, 357.94), (478.85, 356.98), (475.85, 349.40999999999997), (475.27, 334.28999999999996), (476.90999999999997, 352.57), (472.74, 333.1), (474.01, 336.99), (472.7, 337.65999999999997), (478.03999999999996, 360.25), (476.53999999999996, 328.36), (475.76, 351.1), (476.89, 354.48), (474.7, 345.73), (474.01, 338.03999999999996), (474.49, 345.55), (476.85, 340.1), (473.77, 340.66999999999996), (477.75, 324.23), (473.9, 332.6), (474.53, 333.32), (473.32, 330.59000000000003), (481.0, 309.47), (478.47, 306.86), (476.11, 305.78999999999996), (474.28, 305.82), (473.28, 306.83000000000004), (472.98, 311.74), (476.78, 321.09000000000003), (472.25, 316.78), (473.18, 318.28999999999996), (475.24, 318.85), (477.56, 318.52), (479.28, 317.76), (480.4, 317.07), (482.63, 321.25), (475.28999999999996, 334.2), (476.31, 325.08000000000004), (473.44, 332.81), (475.28999999999996, 334.62), (474.37, 333.46000000000004), (476.18, 335.25), (475.09000000000003, 334.91999999999996), (476.52, 335.8), (481.36, 314.38), (481.51, 315.64), (481.14, 316.52), (473.91999999999996, 311.37), (473.53999999999996, 309.40999999999997), (479.81, 324.5), (502.13, 318.03), (479.76, 336.2), (523.72, 306.14), (494.74, 319.78999999999996), (497.1, 320.39), (499.8, 320.64), (504.13, 319.22), (492.93, 318.65), (498.09000000000003, 311.84000000000003), (495.52, 311.8), (500.89, 312.52), (502.98, 313.8), (507.15999999999997, 321.68), (490.44, 361.91999999999996), (503.59000000000003, 317.31), (523.25, 321.41999999999996), (511.87, 319.81), (493.8, 333.53999999999996), (481.74, 342.97), (482.08000000000004, 345.71000000000004), (485.38, 344.77), (488.28999999999996, 346.40999999999997), (484.91999999999996, 346.53999999999996), (487.47, 347.41999999999996), (493.16999999999996, 352.53), (476.63, 334.03), (476.78, 331.07), (507.40999999999997, 311.58000000000004), (489.88, 325.02), (485.99, 334.57), (487.07, 332.88), (503.45, 334.52), (478.16999999999996, 327.49), (498.46000000000004, 307.39), (503.2, 308.91999999999996), (517.48, 300.04), (487.12, 309.13), (493.5, 312.57), (495.24, 350.13), (523.72, 352.66999999999996), (484.41999999999996, 336.23), (482.56, 336.78999999999996), (492.45, 349.23), (491.66999999999996, 349.1), (505.49, 306.90999999999997), (487.12, 335.96000000000004), (493.15999999999997, 307.31), (493.49, 304.63), (501.21000000000004, 292.13), (511.36, 303.53), (497.08000000000004, 298.33), (510.53999999999996, 310.35), (517.12, 308.56), (481.81, 344.49), (485.03, 345.74), (487.81, 346.93), (484.15999999999997, 336.72), (492.01, 349.18), (490.55, 349.94), (491.36, 349.02), (481.49, 335.03), (487.41999999999996, 347.66999999999996), (485.01, 346.99), (482.52, 346.40999999999997), (483.81, 355.35), (483.09000000000003, 354.08000000000004), (482.7, 352.16999999999996), (482.62, 350.14), (482.71000000000004, 348.64), (487.65999999999997, 349.01), (488.06, 349.78), (488.6, 350.83000000000004), (489.2, 351.91999999999996), (490.48, 344.15), (529.79, 336.47), (489.58000000000004, 349.01), (489.98, 349.44), (481.86, 337.8), (487.03, 337.72), (482.16999999999996, 337.33000000000004), (492.61, 327.11), (496.47, 329.81), (488.19, 334.32), (510.09000000000003, 295.29), (504.8, 300.04), (499.73, 304.86), (490.37, 354.03999999999996), (487.46000000000004, 305.06), (490.53999999999996, 297.8), (493.53, 290.56), (502.4, 320.35), (510.84000000000003, 324.3), (491.77, 317.62), (506.91999999999996, 315.53), (487.86, 322.89), (483.06, 333.14), (515.77, 327.6), (507.33000000000004, 326.44), (502.53999999999996, 327.21000000000004), (497.03999999999996, 325.90999999999997), (493.58000000000004, 324.01), (491.0, 322.22), (483.48, 318.48), (514.42, 334.49), (510.15999999999997, 315.43), (477.05, 335.65999999999997), (488.65, 328.06), (530.23, 320.90999999999997), (488.86, 320.37), (489.56, 334.56), (505.3, 317.37), (484.32, 331.09000000000003), (527.78, 344.53999999999996), (492.26, 316.73), (481.01, 328.94), (507.6, 358.87), (510.61, 362.8), (522.8, 335.91999999999996), (513.64, 355.34000000000003), (520.74, 314.48), (491.53, 365.24), (478.32, 336.41999999999996), (491.15, 330.61), (516.0, 320.56), (498.93, 318.77), (496.76, 318.69), (491.22, 350.47), (514.06, 341.08000000000004), (487.37, 367.86), (497.63, 366.87), (503.25, 365.51), (495.03, 318.19), (493.57, 317.39), (492.68, 316.96000000000004), (513.92, 314.91999999999996), (494.12, 315.33000000000004), (496.08000000000004, 315.12), (498.06, 315.31), (500.2, 315.78999999999996), (501.63, 316.37), (527.77, 312.73), (500.65999999999997, 318.49), (487.61, 341.99), (483.84000000000003, 335.74), (482.06, 340.21000000000004), (501.85, 361.8), (496.9, 363.81), (486.1, 365.75), (517.55, 358.8), (492.84000000000003, 316.09000000000003), (483.88, 323.53), (492.23, 367.71000000000004), (521.66, 343.2), (485.19, 348.90999999999997), (485.48, 350.11), (485.83000000000004, 351.7), (486.3, 353.40999999999997), (487.18, 354.99), (489.87, 348.27), (490.33000000000004, 348.1), (490.85, 347.84000000000003), (493.19, 346.94), (507.11, 341.99), (485.64, 320.5), (489.44, 314.08000000000004), (491.64, 314.58000000000004), (489.58000000000004, 348.34000000000003), (509.21000000000004, 350.06), (485.83000000000004, 313.85), (489.13, 358.52), (481.6, 321.71000000000004), (485.15999999999997, 328.48), (484.7, 358.84000000000003), (496.13, 354.69), (491.73, 337.34000000000003), (492.99, 357.16999999999996), (497.95, 337.99), (493.8, 340.88), (501.25, 343.65), (485.24, 362.63), (487.69, 330.4), (499.37, 357.8), (495.07, 360.2), (498.38, 351.34000000000003), (513.6, 346.6), (503.48, 352.82), (519.13, 349.76), (496.38, 345.38), (486.28999999999996, 325.76), (481.98, 334.55), (484.9, 335.57), (479.78, 332.01), (490.9, 311.6), (494.47, 310.28999999999996), (497.95, 310.16999999999996), (501.46000000000004, 311.01), (504.53, 312.77), (508.18, 318.64), (523.35, 328.69), (504.77, 322.89), (501.32, 323.47), (497.44, 322.90999999999997), (494.28, 321.68), (492.06, 320.3), (490.38, 319.1), (530.52, 328.62), (485.66999999999996, 336.37), (482.3, 326.16999999999996), (478.99, 334.23), (478.94, 335.7), (479.91999999999996, 335.0), (485.61, 337.22), (478.03999999999996, 335.71000000000004), (479.13, 336.48), (491.07, 316.55), (489.05, 317.24), (487.26, 317.8), (502.61, 316.86), (504.78, 315.41999999999996), (479.62, 311.65), (481.53999999999996, 311.99), (480.33000000000004, 309.03), (477.77, 311.24), (478.98, 314.26), (496.44, 314.73), (498.81, 315.1), (496.68, 312.1), (494.19, 314.31), (496.18, 317.36)]]
    face_points = list(map(lambda p_xy: (p_xy[0], -p_xy[1]), face_points[0]))
    # We use our perspective eg. Right Eye is right from our perspective, person's left    
    polygons = CreatePolygons(face_points)

    # NORMAL LEFT EYE FOR SANITY
    gaze_left_eye = Point(480, -310)
    res = GetClosestFeature(gaze_left_eye, 0, polygons[1:])
    VisualizeFeatures(gaze_left_eye, polygons, face_points,[])
    print(f'On feature: {FACIAL_FEATURE_NAMES[res[0]]}, closest feature: {FACIAL_FEATURE_NAMES[res[1]]}, distances: {res[2:]}')
    print(res)
    assert(res[0] == 1 and
           res[1] == 1 and
           res[2] == 0 and
           res[3] > 0 and
           res[4] > 0 and 
           res[5] > 0)
    
    # OVERLAP
    gaze_overlap = Point(480.4, -317.07)
    res = GetClosestFeature(gaze_overlap, 0, polygons[1:])
    VisualizeFeatures(gaze_overlap, polygons, face_points,[])
    # print(f'On feature: {FACIAL_FEATURE_NAMES[res[0]]}, closest feature: {FACIAL_FEATURE_NAMES[res[1]]}, distances: {res[2:]}')
    print(res)
    assert(res[0] == 13 and
           res[1] == 13 and
           res[2] == 0 and
           res[3] > 0 and
           res[4] == 0 and 
           res[5] > 0)

    print("Passed Get Closest Feature")

def TestGazeOnFace(face_points=None):
    # A Square
    face_points = [(0,0), (0,1), (1,1), (1,0)]
    face_poly = Polygon(face_points)

    # Gaze not in square
    gaze_point = Point(2, 0)
    (on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist) = GazeOnFace(gaze_point, face_poly)
    print(on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist)
    assert(
        on_hull == 0 and
        on_20_buff == 0 and
        on_30_buff == 0 and
        hull_dist == 1 and
        buff_20_dist == 0.8 and
        buff_30_dist == 0.7
    )

    # Gaze on boundary
    gaze_point = Point(0, 0.5)
    (on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist) = GazeOnFace(gaze_point, face_poly)
    print(on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist)
    assert(
        on_hull == 1 and
        on_20_buff == 1 and
        on_30_buff == 1 and
        hull_dist == 0 and
        buff_20_dist == 0 and
        buff_30_dist == 0
    )

    # Gaze inside square
    gaze_point = Point(0.5, 0.5)
    (on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist) = GazeOnFace(gaze_point, face_poly)
    print(on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist)
    assert(
        on_hull == 1 and
        on_20_buff == 1 and
        on_30_buff == 1 and
        hull_dist == 0 and
        buff_20_dist == 0 and
        buff_30_dist == 0
    )

    # Real Face
    face_points = [[[534, 164], [541, 144], [537, 151], [538, 126], [542, 138], [542, 131], [542, 116], [499, 109], [543, 102], [544, 94], [547, 64], [533, 165], [533, 167], [533, 168], [533, 168], [533, 170], [533, 172], [532, 174], [531, 183], [540, 147], [534, 147], [475, 82], [514, 116], [508, 116], [503, 114], [496, 110], [519, 115], [509, 98], [515, 99], [503, 98], [499, 99], [490, 113], [510, 192], [497, 107], [470, 109], [484, 107], [510, 138], [528, 162], [528, 166], [522, 163], [518, 164], [523, 166], [519, 166], [508, 172], [537, 143], [537, 138], [492, 91], [522, 126], [523, 141], [522, 138], [491, 135], [538, 131], [508, 86], [499, 87], [484, 72], [532, 96], [520, 103], [504, 167], [464, 168], [526, 145], [530, 147], [512, 167], [513, 167], [496, 83], [521, 144], [518, 88], [519, 83], [514, 60], [491, 78], [518, 73], [488, 88], [482, 87], [528, 164], [523, 164], [518, 165], [527, 146], [512, 167], [515, 168], [514, 167], [530, 143], [519, 167], [523, 167], [528, 167], [525, 182], [527, 173], [528, 171], [528, 169], [528, 167], [520, 167], [519, 167], [518, 168], [518, 170], [513, 158], [461, 138], [538, 149], [516, 167], [516, 167], [531, 150], [522, 147], [531, 149], [516, 128], [506, 130], [520, 141], [497, 64], [503, 73], [506, 81], [512, 176], [532, 87], [531, 75], [530, 61], [498, 112], [484, 115], [522, 114], [492, 101], [527, 123], [527, 139], [477, 120], [487, 120], [494, 123], [505, 124], [514, 123], [520, 121], [536, 116], [476, 133], [488, 99], [537, 147], [523, 131], [464, 109], [525, 119], [519, 142], [494, 106], [527, 136], [461, 153], [522, 112], [532, 133], [482, 180], [479, 188], [466, 135], [474, 172], [476, 97], [507, 197], [537, 149], [517, 135], [479, 107], [504, 111], [509, 112], [514, 169], [475, 145], [516, 205], [498, 199], [489, 195], [546, 78], [526, 207], [514, 113], [518, 112], [521, 112], [483, 97], [518, 109], [513, 108], [509, 107], [504, 107], [501, 107], [469, 94], [501, 110], [537, 155], [519, 155], [526, 144], [530, 154], [541, 109], [491, 187], [499, 192], [517, 201], [471, 180], [521, 111], [532, 124], [528, 202], [507, 203], [466, 149], [524, 167], [523, 168], [523, 169], [522, 172], [518, 179], [516, 167], [515, 166], [514, 166], [507, 162], [484, 148], [532, 119], [528, 107], [524, 108], [516, 167], [480, 163], [534, 107], [513, 186], [542, 126], [537, 121], [542, 121], [528, 132], [529, 197], [530, 190], [522, 189], [501, 175], [513, 146], [507, 181], [500, 143], [507, 150], [492, 152], [519, 195], [523, 135], [495, 180], [502, 186], [498, 168], [474, 156], [488, 169], [468, 161], [501, 157], [528, 127], [528, 142], [524, 143], [532, 138], [525, 101], [517, 95], [509, 93], [502, 93], [496, 96], [490, 107], [468, 122], [493, 115], [499, 118], [506, 119], [514, 119], [520, 118], [524, 117], [462, 124], [524, 145], [533, 128], [533, 142], [534, 146], [532, 144], [524, 147], [536, 146], [535, 148], [524, 112], [528, 114], [530, 115], [499, 107], [495, 102], [546, 128], [571, 126], [542, 149], [587, 106], [557, 126], [561, 128], [566, 128], [572, 128], [554, 123], [567, 111], [562, 111], [572, 113], [574, 116], [574, 131], [544, 196], [573, 126], [584, 132], [579, 127], [559, 147], [539, 164], [537, 168], [543, 167], [545, 170], [541, 170], [543, 171], [550, 179], [545, 145], [546, 139], [582, 110], [551, 132], [552, 146], [552, 144], [572, 150], [546, 133], [574, 100], [579, 104], [587, 94], [553, 101], [557, 112], [554, 175], [566, 185], [547, 149], [543, 150], [548, 175], [547, 174], [582, 101], [550, 149], [566, 99], [568, 94], [573, 74], [584, 98], [570, 84], [584, 108], [586, 109], [538, 166], [542, 169], [544, 171], [546, 150], [547, 175], [545, 174], [546, 174], [547, 147], [542, 172], [540, 170], [536, 169], [536, 184], [537, 175], [537, 173], [537, 171], [537, 169], [542, 172], [543, 173], [544, 174], [544, 176], [552, 165], [574, 159], [544, 173], [545, 174], [542, 152], [548, 152], [543, 151], [556, 136], [563, 141], [552, 147], [582, 83], [579, 90], [577, 96], [546, 181], [557, 93], [559, 81], [562, 68], [570, 129], [578, 134], [552, 121], [578, 119], [549, 127], [551, 144], [582, 141], [575, 138], [570, 138], [561, 136], [556, 132], [551, 128], [545, 118], [580, 152], [581, 118], [542, 148], [551, 136], [581, 133], [549, 124], [551, 147], [575, 125], [551, 140], [570, 172], [552, 120], [549, 136], [561, 192], [557, 200], [579, 156], [567, 188], [585, 119], [544, 202], [540, 149], [554, 141], [582, 128], [566, 126], [562, 125], [546, 175], [577, 164], [534, 207], [546, 205], [551, 203], [558, 123], [555, 121], [553, 120], [583, 117], [556, 120], [559, 122], [563, 123], [567, 124], [569, 125], [585, 118], [569, 126], [549, 160], [548, 148], [542, 156], [555, 196], [549, 199], [537, 203], [562, 194], [553, 120], [548, 127], [541, 206], [576, 169], [540, 170], [540, 172], [541, 173], [541, 176], [542, 183], [545, 173], [546, 173], [547, 173], [554, 170], [573, 164], [547, 122], [550, 113], [552, 115], [544, 173], [569, 178], [547, 111], [543, 190], [546, 123], [549, 136], [537, 191], [553, 183], [554, 153], [548, 187], [565, 155], [558, 160], [567, 166], [537, 198], [551, 140], [556, 189], [550, 193], [558, 178], [573, 173], [563, 181], [572, 179], [560, 168], [549, 132], [549, 146], [550, 148], [549, 141], [555, 108], [564, 106], [570, 107], [575, 109], [578, 113], [577, 126], [582, 144], [572, 132], [567, 133], [562, 131], [556, 129], [552, 125], [550, 123], [577, 146], [549, 149], [548, 131], [547, 145], [543, 148], [546, 146], [547, 151], [543, 148], [541, 149], [551, 119], [548, 119], [547, 119], [571, 125], [576, 120], [512, 111], [516, 111], [512, 106], [507, 110], [511, 115], [562, 122], [567, 124], [563, 118], [557, 121], [561, 127]]]
    face_points = list(map(lambda p_xy: (p_xy[0], -p_xy[1]), face_points[0]))
    # We use our perspective eg. Right Eye is right from our perspective, person's left    
    polygons = CreatePolygons(face_points)

    # On boundary
    gaze_point = Point(*face_points[172])
    (on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist) = GazeOnFace(gaze_point, polygons[0])
    VisualizeFeatures(gaze_point, polygons, face_points, [], plot_buffers=True)
    print("On face boundary")
    print(on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist)
    assert(
        on_hull == 1 and
        on_20_buff == 1 and
        on_30_buff == 1 and
        hull_dist == 0 and
        buff_20_dist == 0 and
        buff_30_dist == 0
    )
    
    # Inside face
    gaze_point = Point(480, -120)
    print("On face")
    (on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist) = GazeOnFace(gaze_point, polygons[0])
    VisualizeFeatures(gaze_point, polygons, face_points, [], plot_buffers=True)
    print(on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist)
    assert(
        on_hull == 1 and
        on_20_buff == 1 and
        on_30_buff == 1 and
        hull_dist == 0 and
        buff_20_dist == 0 and
        buff_30_dist == 0
    )

    # Outside face
    gaze_point = Point(400, -250)
    print(f'Not on face')
    (on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist) = GazeOnFace(gaze_point, polygons[0])
    VisualizeFeatures(gaze_point, polygons, face_points, [], plot_buffers=True)
    print(on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist)
    assert(
        on_hull == 0 and
        on_20_buff == 0 and
        on_30_buff == 0
    )

    # Inbetween 30% and 20% buffer 
    gaze_point = Point(525, -240)
    print(f'Inbetween 30% and 20% buffer ')
    (on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist) = GazeOnFace(gaze_point, polygons[0])
    VisualizeFeatures(gaze_point, polygons, face_points, [], plot_buffers=True)
    print(on_hull, on_20_buff, on_30_buff, hull_dist, buff_20_dist, buff_30_dist)
    assert(
        on_hull == 0 and
        on_20_buff == 0 and
        on_30_buff == 1 and
        hull_dist > 0 and
        buff_20_dist > 0 and
        buff_30_dist == 0
    )

    print("Passed Gaze on Face")

def VisualizeFace(gaze_xy, face_points):
       polygons = CreatePolygons(face_points)
       VisualizeFeatures(gaze_xy, polygons, face_points, [])

if __name__ == "__main__":
       # Sanity Check
    # face_points = [[[534, 164], [541, 144], [537, 151], [538, 126], [542, 138], [542, 131], [542, 116], [499, 109], [543, 102], [544, 94], [547, 64], [533, 165], [533, 167], [533, 168], [533, 168], [533, 170], [533, 172], [532, 174], [531, 183], [540, 147], [534, 147], [475, 82], [514, 116], [508, 116], [503, 114], [496, 110], [519, 115], [509, 98], [515, 99], [503, 98], [499, 99], [490, 113], [510, 192], [497, 107], [470, 109], [484, 107], [510, 138], [528, 162], [528, 166], [522, 163], [518, 164], [523, 166], [519, 166], [508, 172], [537, 143], [537, 138], [492, 91], [522, 126], [523, 141], [522, 138], [491, 135], [538, 131], [508, 86], [499, 87], [484, 72], [532, 96], [520, 103], [504, 167], [464, 168], [526, 145], [530, 147], [512, 167], [513, 167], [496, 83], [521, 144], [518, 88], [519, 83], [514, 60], [491, 78], [518, 73], [488, 88], [482, 87], [528, 164], [523, 164], [518, 165], [527, 146], [512, 167], [515, 168], [514, 167], [530, 143], [519, 167], [523, 167], [528, 167], [525, 182], [527, 173], [528, 171], [528, 169], [528, 167], [520, 167], [519, 167], [518, 168], [518, 170], [513, 158], [461, 138], [538, 149], [516, 167], [516, 167], [531, 150], [522, 147], [531, 149], [516, 128], [506, 130], [520, 141], [497, 64], [503, 73], [506, 81], [512, 176], [532, 87], [531, 75], [530, 61], [498, 112], [484, 115], [522, 114], [492, 101], [527, 123], [527, 139], [477, 120], [487, 120], [494, 123], [505, 124], [514, 123], [520, 121], [536, 116], [476, 133], [488, 99], [537, 147], [523, 131], [464, 109], [525, 119], [519, 142], [494, 106], [527, 136], [461, 153], [522, 112], [532, 133], [482, 180], [479, 188], [466, 135], [474, 172], [476, 97], [507, 197], [537, 149], [517, 135], [479, 107], [504, 111], [509, 112], [514, 169], [475, 145], [516, 205], [498, 199], [489, 195], [546, 78], [526, 207], [514, 113], [518, 112], [521, 112], [483, 97], [518, 109], [513, 108], [509, 107], [504, 107], [501, 107], [469, 94], [501, 110], [537, 155], [519, 155], [526, 144], [530, 154], [541, 109], [491, 187], [499, 192], [517, 201], [471, 180], [521, 111], [532, 124], [528, 202], [507, 203], [466, 149], [524, 167], [523, 168], [523, 169], [522, 172], [518, 179], [516, 167], [515, 166], [514, 166], [507, 162], [484, 148], [532, 119], [528, 107], [524, 108], [516, 167], [480, 163], [534, 107], [513, 186], [542, 126], [537, 121], [542, 121], [528, 132], [529, 197], [530, 190], [522, 189], [501, 175], [513, 146], [507, 181], [500, 143], [507, 150], [492, 152], [519, 195], [523, 135], [495, 180], [502, 186], [498, 168], [474, 156], [488, 169], [468, 161], [501, 157], [528, 127], [528, 142], [524, 143], [532, 138], [525, 101], [517, 95], [509, 93], [502, 93], [496, 96], [490, 107], [468, 122], [493, 115], [499, 118], [506, 119], [514, 119], [520, 118], [524, 117], [462, 124], [524, 145], [533, 128], [533, 142], [534, 146], [532, 144], [524, 147], [536, 146], [535, 148], [524, 112], [528, 114], [530, 115], [499, 107], [495, 102], [546, 128], [571, 126], [542, 149], [587, 106], [557, 126], [561, 128], [566, 128], [572, 128], [554, 123], [567, 111], [562, 111], [572, 113], [574, 116], [574, 131], [544, 196], [573, 126], [584, 132], [579, 127], [559, 147], [539, 164], [537, 168], [543, 167], [545, 170], [541, 170], [543, 171], [550, 179], [545, 145], [546, 139], [582, 110], [551, 132], [552, 146], [552, 144], [572, 150], [546, 133], [574, 100], [579, 104], [587, 94], [553, 101], [557, 112], [554, 175], [566, 185], [547, 149], [543, 150], [548, 175], [547, 174], [582, 101], [550, 149], [566, 99], [568, 94], [573, 74], [584, 98], [570, 84], [584, 108], [586, 109], [538, 166], [542, 169], [544, 171], [546, 150], [547, 175], [545, 174], [546, 174], [547, 147], [542, 172], [540, 170], [536, 169], [536, 184], [537, 175], [537, 173], [537, 171], [537, 169], [542, 172], [543, 173], [544, 174], [544, 176], [552, 165], [574, 159], [544, 173], [545, 174], [542, 152], [548, 152], [543, 151], [556, 136], [563, 141], [552, 147], [582, 83], [579, 90], [577, 96], [546, 181], [557, 93], [559, 81], [562, 68], [570, 129], [578, 134], [552, 121], [578, 119], [549, 127], [551, 144], [582, 141], [575, 138], [570, 138], [561, 136], [556, 132], [551, 128], [545, 118], [580, 152], [581, 118], [542, 148], [551, 136], [581, 133], [549, 124], [551, 147], [575, 125], [551, 140], [570, 172], [552, 120], [549, 136], [561, 192], [557, 200], [579, 156], [567, 188], [585, 119], [544, 202], [540, 149], [554, 141], [582, 128], [566, 126], [562, 125], [546, 175], [577, 164], [534, 207], [546, 205], [551, 203], [558, 123], [555, 121], [553, 120], [583, 117], [556, 120], [559, 122], [563, 123], [567, 124], [569, 125], [585, 118], [569, 126], [549, 160], [548, 148], [542, 156], [555, 196], [549, 199], [537, 203], [562, 194], [553, 120], [548, 127], [541, 206], [576, 169], [540, 170], [540, 172], [541, 173], [541, 176], [542, 183], [545, 173], [546, 173], [547, 173], [554, 170], [573, 164], [547, 122], [550, 113], [552, 115], [544, 173], [569, 178], [547, 111], [543, 190], [546, 123], [549, 136], [537, 191], [553, 183], [554, 153], [548, 187], [565, 155], [558, 160], [567, 166], [537, 198], [551, 140], [556, 189], [550, 193], [558, 178], [573, 173], [563, 181], [572, 179], [560, 168], [549, 132], [549, 146], [550, 148], [549, 141], [555, 108], [564, 106], [570, 107], [575, 109], [578, 113], [577, 126], [582, 144], [572, 132], [567, 133], [562, 131], [556, 129], [552, 125], [550, 123], [577, 146], [549, 149], [548, 131], [547, 145], [543, 148], [546, 146], [547, 151], [543, 148], [541, 149], [551, 119], [548, 119], [547, 119], [571, 125], [576, 120], [512, 111], [516, 111], [512, 106], [507, 110], [511, 115], [562, 122], [567, 124], [563, 118], [557, 121], [561, 127]]]
    # face_points = [(478.96000000000004, 342.91999999999996), (474.75, 333.66999999999996), (479.06, 337.21000000000004), (476.75, 323.95), (474.61, 330.6), (476.14, 326.87), (481.25, 317.48), (473.76, 312.6), (483.18, 309.19), (483.21000000000004, 304.97), (486.13, 290.02), (479.1, 344.11), (479.58000000000004, 345.24), (480.27, 346.02), (480.44, 348.24), (479.99, 349.86), (479.75, 351.81), (480.05, 353.7), (481.02, 354.73), (475.97, 335.49), (476.28, 335.26), (477.62, 302.26), (478.14, 316.51), (476.25, 316.5), (474.63, 315.97), (473.55, 313.37), (479.64, 315.9), (476.87, 307.64), (478.81, 308.53), (475.13, 307.55), (474.09000000000003, 308.33000000000004), (472.3, 315.07), (477.2, 357.58000000000004), (473.65, 311.52), (477.37, 314.86), (472.27, 312.28999999999996), (474.72, 330.08000000000004), (477.26, 342.09000000000003), (478.38, 344.96000000000004), (476.25, 342.68), (476.07, 343.85), (477.74, 345.03999999999996), (477.51, 345.40999999999997), (476.47, 348.78), (473.69, 333.34000000000003), (473.40999999999997, 330.41999999999996), (472.58000000000004, 304.83000000000004), (478.48, 323.03), (474.35, 332.22), (474.96000000000004, 330.58000000000004), (472.03999999999996, 328.82), (474.93, 326.93), (475.28999999999996, 303.03999999999996), (473.48, 303.25), (476.51, 297.11), (481.55, 308.03999999999996), (480.35, 310.03), (475.51, 345.96000000000004), (481.61, 342.68), (475.63, 334.25), (476.77, 335.49), (477.07, 346.33000000000004), (477.63, 346.37), (473.55, 300.87), (475.16999999999996, 333.61), (477.87, 304.47), (478.02, 301.74), (478.32, 290.88), (474.66999999999996, 299.69), (477.15, 296.35), (472.65999999999997, 303.15999999999997), (475.33000000000004, 303.9), (477.62, 343.68), (476.85, 343.99), (476.65999999999997, 344.65), (476.28, 334.91999999999996), (477.33000000000004, 346.37), (477.25, 347.15), (477.89, 346.34000000000003), (474.52, 333.28999999999996), (478.36, 345.84000000000003), (478.63, 345.69), (479.22, 345.76), (479.15999999999997, 354.07), (478.07, 352.68), (478.03, 350.88), (478.58000000000004, 349.1), (479.32, 347.81), (478.47, 347.03), (477.78999999999996, 347.52), (477.14, 348.2), (476.74, 349.01), (474.93, 340.96000000000004), (482.43, 327.95), (477.46000000000004, 336.36), (478.28, 346.7), (477.72, 346.90999999999997), (477.4, 336.81), (476.32, 335.58000000000004), (477.07, 336.19), (477.26, 324.46000000000004), (474.76, 326.03999999999996), (475.4, 331.9), (476.72, 293.23), (475.33000000000004, 297.04), (475.43, 300.3), (477.05, 350.66999999999996), (481.64, 303.9), (480.03, 296.81), (481.28, 289.94), (473.71000000000004, 314.9), (470.81, 316.78), (480.59000000000003, 315.19), (473.08000000000004, 308.94), (479.15, 321.35), (473.75, 331.15999999999997), (473.81, 320.59000000000003), (470.15, 319.47), (470.96000000000004, 321.40999999999997), (473.94, 321.71000000000004), (476.56, 320.88), (478.41999999999996, 319.82), (479.99, 317.85), (472.6, 326.87), (472.55, 308.2), (475.25, 335.21000000000004), (477.49, 326.06), (481.65999999999997, 314.69), (479.78, 318.61), (476.28999999999996, 332.1), (473.48, 311.26), (474.7, 329.24), (482.2, 335.1), (481.0, 314.13), (474.59000000000003, 327.73), (476.58000000000004, 350.15999999999997), (479.33000000000004, 353.44), (476.57, 327.41999999999996), (476.57, 345.91999999999996), (476.48, 309.03999999999996), (477.53, 360.31), (476.88, 336.11), (476.65, 328.05), (471.96000000000004, 312.5), (474.89, 314.28), (476.45, 314.83000000000004), (476.88, 347.49), (473.11, 332.91999999999996), (479.82, 365.06), (478.78999999999996, 360.22), (478.99, 357.46000000000004), (484.24, 297.49), (482.77, 366.86), (478.18, 314.82), (479.71000000000004, 314.44), (480.58000000000004, 314.22), (472.55, 307.28999999999996), (479.98, 312.44), (478.59000000000003, 311.65), (476.93, 311.1), (475.34000000000003, 310.90999999999997), (474.40999999999997, 311.13), (479.37, 307.83000000000004), (474.11, 313.46000000000004), (479.28, 339.37), (475.61, 339.55), (475.05, 333.72), (477.28999999999996, 339.18), (482.94, 313.37), (476.96000000000004, 354.12), (477.49, 357.19), (478.4, 363.02), (480.46000000000004, 348.86), (480.66999999999996, 313.40999999999997), (477.87, 322.48), (481.43, 364.69), (478.81, 362.8), (476.78999999999996, 333.96000000000004), (478.73, 347.4), (477.98, 348.31), (477.32, 349.53), (477.03999999999996, 351.03), (477.90999999999997, 352.5), (477.53999999999996, 345.87), (476.88, 345.5), (476.36, 345.01), (474.83000000000004, 343.19), (472.40999999999997, 334.95), (479.62, 319.41999999999996), (482.03, 312.40999999999997), (481.38, 312.4), (478.19, 346.05), (474.24, 341.96000000000004), (482.43, 312.98), (477.84000000000003, 355.0), (477.93, 323.78), (478.26, 321.14), (479.53999999999996, 320.82), (476.39, 326.84000000000003), (480.89, 361.63), (481.05, 357.94), (478.85, 356.98), (475.85, 349.40999999999997), (475.27, 334.28999999999996), (476.90999999999997, 352.57), (472.74, 333.1), (474.01, 336.99), (472.7, 337.65999999999997), (478.03999999999996, 360.25), (476.53999999999996, 328.36), (475.76, 351.1), (476.89, 354.48), (474.7, 345.73), (474.01, 338.03999999999996), (474.49, 345.55), (476.85, 340.1), (473.77, 340.66999999999996), (477.75, 324.23), (473.9, 332.6), (474.53, 333.32), (473.32, 330.59000000000003), (481.0, 309.47), (478.47, 306.86), (476.11, 305.78999999999996), (474.28, 305.82), (473.28, 306.83000000000004), (472.98, 311.74), (476.78, 321.09000000000003), (472.25, 316.78), (473.18, 318.28999999999996), (475.24, 318.85), (477.56, 318.52), (479.28, 317.76), (480.4, 317.07), (482.63, 321.25), (475.28999999999996, 334.2), (476.31, 325.08000000000004), (473.44, 332.81), (475.28999999999996, 334.62), (474.37, 333.46000000000004), (476.18, 335.25), (475.09000000000003, 334.91999999999996), (476.52, 335.8), (481.36, 314.38), (481.51, 315.64), (481.14, 316.52), (473.91999999999996, 311.37), (473.53999999999996, 309.40999999999997), (479.81, 324.5), (502.13, 318.03), (479.76, 336.2), (523.72, 306.14), (494.74, 319.78999999999996), (497.1, 320.39), (499.8, 320.64), (504.13, 319.22), (492.93, 318.65), (498.09000000000003, 311.84000000000003), (495.52, 311.8), (500.89, 312.52), (502.98, 313.8), (507.15999999999997, 321.68), (490.44, 361.91999999999996), (503.59000000000003, 317.31), (523.25, 321.41999999999996), (511.87, 319.81), (493.8, 333.53999999999996), (481.74, 342.97), (482.08000000000004, 345.71000000000004), (485.38, 344.77), (488.28999999999996, 346.40999999999997), (484.91999999999996, 346.53999999999996), (487.47, 347.41999999999996), (493.16999999999996, 352.53), (476.63, 334.03), (476.78, 331.07), (507.40999999999997, 311.58000000000004), (489.88, 325.02), (485.99, 334.57), (487.07, 332.88), (503.45, 334.52), (478.16999999999996, 327.49), (498.46000000000004, 307.39), (503.2, 308.91999999999996), (517.48, 300.04), (487.12, 309.13), (493.5, 312.57), (495.24, 350.13), (523.72, 352.66999999999996), (484.41999999999996, 336.23), (482.56, 336.78999999999996), (492.45, 349.23), (491.66999999999996, 349.1), (505.49, 306.90999999999997), (487.12, 335.96000000000004), (493.15999999999997, 307.31), (493.49, 304.63), (501.21000000000004, 292.13), (511.36, 303.53), (497.08000000000004, 298.33), (510.53999999999996, 310.35), (517.12, 308.56), (481.81, 344.49), (485.03, 345.74), (487.81, 346.93), (484.15999999999997, 336.72), (492.01, 349.18), (490.55, 349.94), (491.36, 349.02), (481.49, 335.03), (487.41999999999996, 347.66999999999996), (485.01, 346.99), (482.52, 346.40999999999997), (483.81, 355.35), (483.09000000000003, 354.08000000000004), (482.7, 352.16999999999996), (482.62, 350.14), (482.71000000000004, 348.64), (487.65999999999997, 349.01), (488.06, 349.78), (488.6, 350.83000000000004), (489.2, 351.91999999999996), (490.48, 344.15), (529.79, 336.47), (489.58000000000004, 349.01), (489.98, 349.44), (481.86, 337.8), (487.03, 337.72), (482.16999999999996, 337.33000000000004), (492.61, 327.11), (496.47, 329.81), (488.19, 334.32), (510.09000000000003, 295.29), (504.8, 300.04), (499.73, 304.86), (490.37, 354.03999999999996), (487.46000000000004, 305.06), (490.53999999999996, 297.8), (493.53, 290.56), (502.4, 320.35), (510.84000000000003, 324.3), (491.77, 317.62), (506.91999999999996, 315.53), (487.86, 322.89), (483.06, 333.14), (515.77, 327.6), (507.33000000000004, 326.44), (502.53999999999996, 327.21000000000004), (497.03999999999996, 325.90999999999997), (493.58000000000004, 324.01), (491.0, 322.22), (483.48, 318.48), (514.42, 334.49), (510.15999999999997, 315.43), (477.05, 335.65999999999997), (488.65, 328.06), (530.23, 320.90999999999997), (488.86, 320.37), (489.56, 334.56), (505.3, 317.37), (484.32, 331.09000000000003), (527.78, 344.53999999999996), (492.26, 316.73), (481.01, 328.94), (507.6, 358.87), (510.61, 362.8), (522.8, 335.91999999999996), (513.64, 355.34000000000003), (520.74, 314.48), (491.53, 365.24), (478.32, 336.41999999999996), (491.15, 330.61), (516.0, 320.56), (498.93, 318.77), (496.76, 318.69), (491.22, 350.47), (514.06, 341.08000000000004), (487.37, 367.86), (497.63, 366.87), (503.25, 365.51), (495.03, 318.19), (493.57, 317.39), (492.68, 316.96000000000004), (513.92, 314.91999999999996), (494.12, 315.33000000000004), (496.08000000000004, 315.12), (498.06, 315.31), (500.2, 315.78999999999996), (501.63, 316.37), (527.77, 312.73), (500.65999999999997, 318.49), (487.61, 341.99), (483.84000000000003, 335.74), (482.06, 340.21000000000004), (501.85, 361.8), (496.9, 363.81), (486.1, 365.75), (517.55, 358.8), (492.84000000000003, 316.09000000000003), (483.88, 323.53), (492.23, 367.71000000000004), (521.66, 343.2), (485.19, 348.90999999999997), (485.48, 350.11), (485.83000000000004, 351.7), (486.3, 353.40999999999997), (487.18, 354.99), (489.87, 348.27), (490.33000000000004, 348.1), (490.85, 347.84000000000003), (493.19, 346.94), (507.11, 341.99), (485.64, 320.5), (489.44, 314.08000000000004), (491.64, 314.58000000000004), (489.58000000000004, 348.34000000000003), (509.21000000000004, 350.06), (485.83000000000004, 313.85), (489.13, 358.52), (481.6, 321.71000000000004), (485.15999999999997, 328.48), (484.7, 358.84000000000003), (496.13, 354.69), (491.73, 337.34000000000003), (492.99, 357.16999999999996), (497.95, 337.99), (493.8, 340.88), (501.25, 343.65), (485.24, 362.63), (487.69, 330.4), (499.37, 357.8), (495.07, 360.2), (498.38, 351.34000000000003), (513.6, 346.6), (503.48, 352.82), (519.13, 349.76), (496.38, 345.38), (486.28999999999996, 325.76), (481.98, 334.55), (484.9, 335.57), (479.78, 332.01), (490.9, 311.6), (494.47, 310.28999999999996), (497.95, 310.16999999999996), (501.46000000000004, 311.01), (504.53, 312.77), (508.18, 318.64), (523.35, 328.69), (504.77, 322.89), (501.32, 323.47), (497.44, 322.90999999999997), (494.28, 321.68), (492.06, 320.3), (490.38, 319.1), (530.52, 328.62), (485.66999999999996, 336.37), (482.3, 326.16999999999996), (478.99, 334.23), (478.94, 335.7), (479.91999999999996, 335.0), (485.61, 337.22), (478.03999999999996, 335.71000000000004), (479.13, 336.48), (491.07, 316.55), (489.05, 317.24), (487.26, 317.8), (502.61, 316.86), (504.78, 315.41999999999996), (479.62, 311.65), (481.53999999999996, 311.99), (480.33000000000004, 309.03), (477.77, 311.24), (478.98, 314.26), (496.44, 314.73), (498.81, 315.1), (496.68, 312.1), (494.19, 314.31), (496.18, 317.36)]
    
    # face_points = [(515.12, 334.85), (483.24, 328.95), (494.26, 327.36), (473.73, 307.03999999999996), (479.44, 324.31), (477.43, 315.13), (474.3, 287.93), (454.95, 278.35), (468.31, 271.07), (463.97, 264.24), (451.68, 231.14), (515.73, 336.65), (516.17, 338.55), (516.41, 339.93), (516.74, 340.87), (517.64, 343.24), (518.46, 345.90999999999997), (519.01, 348.28), (516.34, 350.16999999999996), (487.03, 329.75), (485.25, 327.53999999999996), (438.98, 248.87), (466.19, 279.95), (463.63, 281.66999999999996), (460.59000000000003, 282.69), (457.52, 279.15999999999997), (466.85, 278.38), (451.33, 271.61), (455.4, 270.88), (448.93, 272.62), (449.14, 274.01), (460.18, 282.28), (509.88, 353.09000000000003), (454.22, 276.9), (453.63, 271.14), (458.01, 276.53999999999996), (473.57, 312.8), (509.65999999999997, 335.4), (511.73, 339.66999999999996), (505.19, 338.34000000000003), (502.57, 340.62), (507.95, 340.9), (505.2, 341.94), (498.99, 342.73), (479.87, 328.95), (475.94, 324.64), (442.84000000000003, 270.25), (472.62, 296.8), (476.15, 321.77), (475.47, 317.41999999999996), (465.76, 309.49), (474.27, 315.93), (439.71, 268.65), (439.15, 269.35), (431.24, 244.39), (453.56, 269.76), (459.58, 271.13), (494.2, 339.45), (493.16999999999996, 308.53999999999996), (480.84000000000003, 324.40999999999997), (485.28, 326.3), (499.78, 343.9), (501.07, 343.7), (436.61, 265.52), (479.0, 322.66999999999996), (443.95, 268.53), (439.97, 264.84000000000003), (431.03, 238.18), (432.45, 254.88), (436.59000000000003, 251.79000000000002), (442.26, 266.47), (437.93, 258.27), (510.7, 337.73), (506.6, 339.68), (503.83000000000004, 341.3), (482.90999999999997, 325.03999999999996), (500.47, 343.82), (502.36, 344.47), (501.68, 343.55), (478.82, 325.4), (506.06, 342.36), (508.85, 341.66999999999996), (512.42, 340.86), (511.84000000000003, 349.89), (513.4, 349.16999999999996), (513.0699999999999, 346.76), (512.71, 344.03), (512.5699999999999, 341.71000000000004), (506.03999999999996, 342.69), (505.33000000000004, 343.87), (504.57, 345.3), (503.96000000000004, 346.65999999999997), (488.57, 333.63), (477.06, 282.28999999999996), (490.53, 328.71000000000004), (503.97, 343.02), (503.18, 343.76), (488.93, 328.05), (483.44, 324.85), (487.08000000000004, 327.32), (471.69, 299.65), (468.45, 304.26), (477.6, 318.57), (428.15999999999997, 240.97), (431.56, 252.55), (435.63, 264.76), (502.83000000000004, 345.09000000000003), (447.35, 264.7), (445.21, 250.86), (438.75, 235.13), (458.61, 281.52), (464.29, 285.1), (466.76, 277.12), (450.47, 273.98), (472.47, 294.03), (474.85, 322.26), (456.15999999999997, 288.12), (463.55, 291.95), (463.99, 296.49), (467.07, 294.7), (469.12, 290.94), (469.19, 288.48), (471.39, 289.28999999999996), (462.34000000000003, 300.43), (449.64, 272.32), (484.66999999999996, 329.89), (474.9, 304.41999999999996), (460.09000000000003, 262.29), (468.72, 286.26), (479.31, 316.82), (454.63, 276.33000000000004), (474.27, 316.9), (484.83000000000004, 294.48), (465.61, 275.11), (473.52, 316.2), (495.99, 334.53999999999996), (503.48, 334.47), (467.83, 292.23), (490.4, 324.77), (445.36, 263.62), (512.46, 356.65999999999997), (488.51, 328.84000000000003), (475.24, 307.91999999999996), (461.49, 274.84000000000003), (457.94, 279.6), (460.82, 278.93), (501.49, 345.16999999999996), (470.37, 309.41999999999996), (523.22, 363.72), (512.53, 352.68), (508.49, 345.11), (457.02, 248.16), (532.4, 364.3), (463.24, 277.39), (464.62, 275.77), (465.42, 275.23), (450.9, 269.02), (461.83, 273.51), (458.93, 273.53), (455.43, 274.31), (453.0, 275.36), (452.72, 276.32), (448.24, 254.47), (455.98, 279.24), (496.93, 330.09000000000003), (487.81, 331.94), (479.29, 324.5), (491.89, 331.33000000000004), (472.22, 277.62), (501.64, 343.22), (507.27, 349.69), (518.59, 361.99), (499.31, 322.33000000000004), (463.89, 274.59000000000003), (472.77, 300.33000000000004), (527.39, 362.85), (517.0699999999999, 359.37), (475.78, 302.72), (508.9, 342.28999999999996), (508.44, 344.08000000000004), (508.16999999999996, 346.23), (508.15999999999997, 348.39), (507.16999999999996, 347.81), (503.19, 342.78999999999996), (502.01, 342.61), (500.88, 342.32), (490.8, 336.39), (473.35, 316.75), (471.83, 291.36), (464.01, 273.66999999999996), (463.88, 273.24), (504.14, 342.91999999999996), (483.53, 324.08000000000004), (463.5, 276.15999999999997), (508.98, 349.6), (476.57, 306.03999999999996), (472.62, 298.71000000000004), (475.56, 297.39), (474.65999999999997, 309.49), (523.24, 358.91999999999996), (519.7, 353.86), (514.24, 353.15), (497.09000000000003, 341.65999999999997), (479.59000000000003, 320.76), (503.23, 345.90999999999997), (473.39, 318.28), (480.85, 325.53999999999996), (478.27, 323.90999999999997), (515.72, 358.15), (475.93, 310.61), (497.39, 341.87), (504.3, 347.34000000000003), (490.96000000000004, 336.87), (477.59000000000003, 316.23), (488.99, 332.98), (483.09000000000003, 313.03999999999996), (484.8, 330.85), (473.8, 302.15999999999997), (476.82, 324.93), (477.76, 323.98), (474.64, 323.53999999999996), (458.08, 270.6), (451.46, 270.21), (446.73, 270.94), (444.46, 271.9), (445.65999999999997, 272.75), (456.46, 276.53), (460.45, 281.62), (460.51, 285.91999999999996), (462.43, 288.51), (465.42, 287.51), (467.87, 284.8), (468.52, 282.72), (468.64, 281.5), (469.58, 271.44), (479.99, 324.24), (473.29, 308.16999999999996), (477.56, 327.3), (482.99, 328.05), (479.46, 326.62), (482.96, 325.1), (483.52, 329.27), (486.87, 328.44), (466.40999999999997, 275.76), (467.90999999999997, 278.78999999999996), (467.40999999999997, 282.28), (453.24, 276.86), (450.98, 274.74), (481.78, 304.97), (526.41, 262.96), (495.88, 325.25), (543.98, 213.42000000000002), (507.53999999999996, 275.63), (514.19, 273.90999999999997), (520.98, 271.18), (530.3199999999999, 263.22), (501.95, 275.86), (511.4, 254.75), (504.13, 258.13), (519.16, 253.07), (525.16, 253.45999999999998), (536.95, 265.07), (541.76, 348.88), (529.0699999999999, 259.63), (558.64, 240.05), (544.73, 257.15999999999997), (519.5699999999999, 300.90999999999997), (519.75, 332.63), (520.24, 337.25), (524.52, 332.81), (527.44, 333.37), (523.6, 336.33000000000004), (526.04, 335.81), (536.81, 334.26), (487.87, 327.34000000000003), (484.97, 322.56), (532.25, 244.91), (501.64, 289.32), (506.89, 314.35), (506.68, 309.56), (538.78, 290.93), (482.85, 313.71000000000004), (510.19, 245.63), (522.01, 243.76), (528.42, 211.04000000000002), (482.33, 262.55), (498.90999999999997, 262.86), (538.11, 329.46000000000004), (586.89, 286.93), (505.13, 318.72), (501.62, 322.01), (531.37, 334.68), (530.13, 335.16999999999996), (525.01, 238.07999999999998), (509.63, 314.71000000000004), (496.90999999999997, 251.38), (495.76, 246.26999999999998), (489.44, 217.87), (521.84, 226.95), (488.43, 235.79000000000002), (536.77, 239.89), (536.1800000000001, 227.7), (520.25, 335.05), (524.17, 334.6), (526.84, 334.56), (504.77, 319.71000000000004), (530.73, 334.97), (529.67, 336.5), (529.51, 335.34000000000003), (498.7, 321.52), (525.27, 336.72), (522.96, 337.59000000000003), (520.0, 338.72), (522.53, 348.16999999999996), (523.74, 346.19), (522.94, 343.94), (521.7, 341.48), (520.39, 339.48), (525.47, 336.91999999999996), (526.9, 337.55), (528.4, 338.41999999999996), (529.6800000000001, 339.3), (523.44, 325.52), (580.4300000000001, 253.57999999999998), (527.22, 336.12), (528.47, 336.32), (501.12, 324.7), (510.62, 317.46000000000004), (501.31, 323.49), (509.35, 289.87), (520.4, 290.77), (509.78999999999996, 310.2), (510.69, 212.34), (506.24, 229.32), (510.95, 239.95), (533.14, 339.24), (480.46, 254.18), (472.9, 242.17000000000002), (470.46, 224.09), (527.13, 267.46), (545.81, 266.42), (498.2, 275.52), (533.6, 253.19), (495.07, 288.28999999999996), (500.16999999999996, 316.66999999999996), (553.75, 261.73), (540.83, 273.25), (531.4300000000001, 279.24), (518.0, 283.11), (508.15999999999997, 283.96000000000004), (500.58000000000004, 283.81), (480.7, 286.96000000000004), (557.89, 275.63), (539.33, 250.1), (490.03, 328.71000000000004), (503.07, 297.16999999999996), (567.13, 228.44), (494.15, 282.96000000000004), (511.89, 308.15), (532.05, 258.32), (499.66999999999996, 310.72), (585.24, 268.87), (498.61, 273.27), (490.59000000000003, 311.97), (568.88, 321.69), (577.58, 320.78), (571.51, 264.88), (574.7, 307.98), (547.65, 232.17000000000002), (547.88, 352.18), (492.82, 327.63), (510.87, 298.51), (552.48, 254.97), (518.89, 268.52), (512.84, 271.08), (530.79, 336.68), (562.92, 286.65999999999997), (543.51, 360.6), (561.23, 344.82), (569.02, 334.95), (507.52, 272.33000000000004), (502.74, 272.83000000000004), (499.88, 273.21000000000004), (545.34, 245.95), (502.8, 267.1), (507.88, 263.46), (513.35, 261.2), (519.45, 259.76), (523.74, 259.5), (556.13, 218.91), (523.22, 265.74), (516.48, 324.90999999999997), (503.90999999999997, 318.97), (503.94, 328.52), (562.71, 333.53), (556.04, 342.97), (538.14, 359.61), (583.79, 304.90999999999997), (499.78999999999996, 271.05), (488.56, 296.27), (552.71, 353.78999999999996), (576.16, 278.09000000000003), (523.26, 338.09000000000003), (524.8, 339.36), (526.19, 341.06), (527.35, 342.93), (528.53, 344.11), (527.97, 335.48), (528.88, 334.73), (529.62, 333.91999999999996), (530.97, 327.15999999999997), (551.83, 298.21000000000004), (487.7, 287.4), (489.96000000000004, 270.93), (495.41999999999996, 269.73), (527.09, 336.12), (562.89, 307.19), (481.89, 274.09000000000003), (535.52, 345.89), (481.45, 296.44), (497.4, 303.77), (527.55, 351.43), (545.2, 332.7), (519.11, 310.3), (541.78, 339.32), (531.98, 304.18), (526.64, 314.46000000000004), (543.2, 309.32), (532.76, 356.0), (504.23, 303.32), (554.74, 332.11), (549.04, 340.66999999999996), (545.84, 325.75), (567.0699999999999, 295.57), (556.54, 319.96000000000004), (578.21, 291.65999999999997), (535.53, 319.48), (496.01, 296.53), (499.52, 320.46000000000004), (505.90999999999997, 317.5), (492.37, 319.78999999999996), (492.34000000000003, 263.72), (501.22, 256.08), (510.53, 251.70999999999998), (519.69, 249.69), (527.65, 249.97), (537.39, 258.15), (565.95, 252.11), (533.17, 269.51), (525.71, 274.40999999999997), (516.38, 277.78), (507.78, 279.33000000000004), (501.16999999999996, 279.53), (496.22, 279.32), (574.37, 240.20999999999998), (507.55, 317.41999999999996), (489.02, 304.18), (493.16999999999996, 324.35), (494.12, 325.93), (495.62, 323.72), (507.69, 318.64), (492.3, 327.40999999999997), (494.77, 326.62), (495.55, 274.45), (491.53999999999996, 277.43), (488.31, 280.08000000000004), (526.6, 259.56), (529.9, 254.9), (451.27, 274.44), (454.61, 273.6), (450.13, 270.4), (448.29, 275.15), (452.74, 278.52), (516.42, 264.15999999999997), (524.3, 261.44), (514.58, 258.3), (508.52, 266.84000000000003), (518.24, 270.01)]
    # face_points = list(map(lambda p_xy: (p_xy[0], -p_xy[1]), face_points))
    # # face_points = list(map(lambda p_xy: (p_xy[0], -p_xy[1]), face_points[0]))
    # gaze_xy = Point(face_points[233])
    # print(face_points[233])
    # VisualizeFeaturesWithIndex(gaze_xy, CreatePolygons(face_points), face_points, [])

    TestGetClosestPoint()
    TestGetClosestFeature()
    TestGazeOnFace()